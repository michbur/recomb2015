\documentclass[final]{beamer}
\usepackage{grffile}
\mode<presentation>{\usetheme{CambridgeUSPOL}}

\usepackage[utf8]{inputenc}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\newcolumntype{Z}{>{\centering\arraybackslash}X}

% rysunki
\usepackage{tikz}
\usepackage{ifthen}
\usepackage{xxcolor}
\usetikzlibrary{arrows}
\usetikzlibrary[topaths]
\usetikzlibrary{decorations.pathreplacing}
%\usepackage{times}\usefonttheme{professionalfonts}  % times is obsolete
\usefonttheme[onlymath]{serif}
\boldmath
\usepackage[orientation=portrait,size=a0,scale=1.4,debug]{beamerposter}                       % e.g. for DIN-A0 poster
%\usepackage[orientation=portrait,size=a1,scale=1.4,grid,debug]{beamerposter}                  % e.g. for DIN-A1 poster, with optional grid and debug output
%\usepackage[size=custom,width=200,height=120,scale=2,debug]{beamerposter}                     % e.g. for custom size poster
%\usepackage[orientation=portrait,size=a0,scale=1.0,printer=rwth-glossy-uv.df]{beamerposter}   % e.g. for DIN-A0 poster with rwth-glossy-uv printer check
% ...
%

\usecolortheme{seagull}
\useinnertheme{rectangles}
\setbeamercolor{item projected}{bg=darkred}
% \setbeamertemplate{enumerate items}[default]
\setbeamertemplate{caption}{\insertcaption} 
\setbeamertemplate{navigation symbols}{}
\setbeamercovered{transparent}
\setbeamercolor{block title}{fg=darkred}
\setbeamercolor{local structure}{fg=darkred}

\setbeamercolor*{enumerate item}{fg=darkred}
\setbeamercolor*{enumerate subitem}{fg=darkred}
\setbeamercolor*{enumerate subsubitem}{fg=darkred}

\setbeamercolor*{itemize item}{fg=darkred}
\setbeamercolor*{itemize subitem}{fg=darkred}
\setbeamercolor*{itemize subsubitem}{fg=darkred}

\newlength{\columnheight}
\setlength{\columnheight}{90cm}
\renewcommand{\thetable}{}
\def\andname{,}
\authornote{}

\renewcommand{\APACrefatitle}[2]{}
\renewcommand{\bibliographytypesize}{\footnotesize} 
\renewcommand{\APACrefYearMonthDay}[3]{%
  {\BBOP}{#1}
  {\BBCP}
}

\begin{document}



<<knitrIntro, echo = FALSE, message=FALSE>>=
library(xtable)
library(ggplot2)
library(reshape2)
library(biogram)
load("three_n_power.RData")

poster_theme <- theme(plot.background=element_rect(fill = "transparent",
                                                   colour = "transparent"),
                      axis.text.x = element_text(size=16), 
                      axis.text.y = element_text(size=16),
                      axis.title.x = element_text(size=19, vjust = -1), 
                      axis.title.y = element_text(size=19, vjust = 1),
                      strip.text = element_text(size=19),
                      legend.text = element_text(size=16), 
                      legend.title = element_text(size=19),
                      plot.title = element_text(size=27),
                      panel.background = element_rect(fill = "transparent",colour = "black"),
                      legend.direction="horizontal", legend.position = "bottom",
                      legend.background = element_rect(fill="NA"))
@


\date{}
\author{Piotr Sobczyk\inst{1}*, Micha\l{}  Burdukiewicz\inst{2}, Chris Lauber\inst{3}, Pawe\l{} Mackiewicz\inst{2} \\
*Piotr.Sobczyk@pwr.edu.pl}


\institute{

\textsuperscript{1}Wroc\l{}aw University of Technology, Institute of Mathematics and Computer Science, Poland

\vspace{0.3cm}

\textsuperscript{2}University of Wroc\l{}aw, Department of Genomics, Poland 

\vspace{0.3cm}

\textsuperscript{3}Dresden University of Technology, Institute of Medical Informatics and Biometry, Poland 

}
\title{\huge Quick Permutation Test: feature filtering of n-gram data}

\begin{frame}
  \begin{columns}
    \begin{column}{.49\textwidth}
      \begin{beamercolorbox}[center,wd=\textwidth]{postercolumn}
        \begin{minipage}[T]{.95\textwidth}
          \parbox[t][\columnheight]{\textwidth}
            {
    
        
    \begin{block}{Introduction}
      N-grams (k-tuples) are vectors of n characters derived from input sequence(s). They may form continuous sub-sequences or be discontinuous. Another important n-gram parameter is its position. Instead of just counting n-grams, one may want to count how many n-grams occur at a given position in multiple (e.g. related) sequences.

\small{
       \begin{columns}[c] % the "c" option specifies center vertical alignment
    \column{.5\textwidth} 
<<echo = FALSE,message=FALSE,results='asis'>>=
tfres <- function(x, cn = c("1-ngram", "2-gram", "3-gram"),
                  rn = round(seq(from = 0.25, to = 0.91, length.out = 6), 2)) {
  colnames(x) <- cn
  rownames(x) <- rn
  x <- melt(x)
  #significant proportion, ngram, value
  colnames(x) <- c("sig", "ngram", "value")
  x[["sig"]] <- as.factor(x[["sig"]])
  x
}
  

sample_seq <- matrix(sample(1L:4, 18, replace = TRUE), nrow = 3)
colnames(sample_seq) <- paste0("P", 1L:ncol(sample_seq))
rownames(sample_seq) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(data.frame(sample_seq), caption = "Sample sequences.", digits = 0))

# unis <- count_ngrams(sample_seq, 1, 1L:4, pos = TRUE)
# unis <- data.frame(as.matrix(unis))[, 1L:7]
# print(xtable(unis, caption = "A fraction of possible unigrams with position information.", digits = 0), include.rownames = FALSE)
@
      
      
     % column designated by a command

    \column{.5\textwidth}
    
<<echo = FALSE,message=FALSE,results='asis'>>=
    
     unis <- count_ngrams(sample_seq, 1, 1L:4)
unis <- data.frame(as.matrix(unis))
colnames(unis) <- 1L:4
print(xtable(unis, caption = "Unigram counts.", digits = 0), include.rownames = FALSE)
@

    \end{columns}

<<echo = FALSE,message=FALSE,results='asis'>>=
    
unis <- count_ngrams(sample_seq, 1, 1L:4, pos = TRUE)
unis <- data.frame(as.matrix(unis))[, 1L:11]
colnames(unis) <- substr(sub("X", "P", colnames(unis)), 0, 4)
print(xtable(unis, caption = "A fraction of possible unigrams with position information.", digits = 0), include.rownames = FALSE)
@
}      
    \end{block}
    
    \vfill
    
    \begin{block}{Curse of dimensionality}
Number of possible positioned n-grams (not taking into account distances between elemnts of n-gram):
$$
n_{max} = L \times m^n
$$

\centering
\scalebox{0.85}{  
<<echo = FALSE,message=FALSE,fig.align='center'>>=
library(reshape2)
n <- 1:5
n_max <- 4^n

dat <- melt(sapply(2:5*5, function(i) i * n_max))
dat[["Var2"]] <- factor(dat[["Var2"]])
levels(dat[["Var2"]]) <- 2:5*5
colnames(dat) <- c("n", "L", "n_max")
ggplot(dat, aes(x = n, y = n_max, fill = L, col = L)) + 
  geom_line(linetype="dotted", size=1.5) + 
  geom_point(size=7, shape=21) +
  scale_x_continuous(breaks = 0L:6) +
  poster_theme

@
}


    \end{block}
    \vfill
    
    
    \begin{block}{Permutation test}
      During permutation tests class labels are randomly exchanged during computation of significance statistic. p-values are defined as:
$$\textnormal{p-value} = \frac{N_{T_P > T_R}}{N}$$
where $N_{T_P > T_R}$ is number of times when $T_P$ (permuted test statistic) was more extreme than $T_R$ (test statistic for non-permuted data).

Permutation tests are model and statistic independent, but computationally expensive (especially precise estimation of low p-values, because the number of permutations is inversely proportional to the interval between p-values).
      
    \end{block}
    \vfill
    
    \begin{block}{QuiPT algorithm}
      If probability that target equals 1 is $p$ and probability that feature equals
1 is $q$ and feature and target are independent then each of them has the 
following probabilities 
$$P(Target, Feature) = (1,1)) = p \cdot q$$
$$P(Target, Feature) = (1,0)) = p \cdot (1-q)$$
$$P(Target, Feature) = (0,1)) = (1-p) \cdot q$$
$$P(Target, Feature) = (0,0)) = (1-p) \cdot (1-q)$$

\begin{equation*}
\begin{split}
F(n_{1,1}, n_{1,0}, n_{0,1}, n_{0,0}) = {n \choose n_{1,1}} (p\cdot q)^{n_{1,1}} {n - n_{1,1} \\ \choose n_{1,0}} (p\cdot (1-q))^{n_{1,0}} \\
{n - n_{1,1} - n_{1,0} \\ \choose n_{0,1}} ((1-p)\cdot q)^{n_{0,1}} \\
{n - n_{1,1} - n_{1,0} -n_{0,1}\choose n_{0,0}} \\((1-p)\cdot (1-q))^{n_{0,0}}$$
\end{split}
\end{equation}

In addition to this: 
$n_{1,\cdot} = n_{1,1} + n_{1,0}$ and
$n_{\cdot, 1} = n_{1,1} + n_{0,1}$ are known and fixed.
    \end{block}
    \vfill
    

    
            }
        \end{minipage}
      \end{beamercolorbox}
    \end{column}
    
    
%new column ------------------------------------------------------    
    
    \begin{column}{.52\textwidth}
      \begin{beamercolorbox}[center,wd=\textwidth]{postercolumn}
        \begin{minipage}[T]{.95\textwidth}  
          \parbox[t][\columnheight]{\textwidth}
            {
            
    
    \begin{block}{Validation procedure}
    \begin{enumerate}[1.]
      \item Chose randomly (without replacement) 3816 proteins without signal peptides, reshuffle 3816 proteins with signal peptides.
      \item Perform 5-fold cross-validation.
      \item Repeat step 1. and 2. 250 times.
    \end{enumerate} 
    \end{block}
    \vfill
    
    \begin{block}{Validation results}
    \begin{figure}
    \scalebox{0.85}{    
<<echo = FALSE,message=FALSE,fig.width=14,fig.align='center'>>=
metrics <- t(poster_data[["metrics"]][c("AUC", "H", "Gini", "Recall", "Spec", "Precision"), ])
melted_metrics <- do.call(rbind, lapply(1L:ncol(metrics), function(i)
       data.frame(metric = rep(colnames(metrics)[i], nrow(metrics)),
                  value = unlist(metrics[, i]))))
melted_metrics[["metric"]] <- as.factor(melted_metrics[["metric"]])
levels(melted_metrics[["metric"]]) <- c("AUC", "H-measure", "Gini", "Recall", "Specificity", "Precision")
ggplot(melted_metrics, aes(x = metric, y = value)) + 
  geom_boxplot() +
  scale_x_discrete(name = "Performance measure") + 
  scale_y_continuous(name = "Value") +
  poster_theme
@
    }
    \end{figure}

The mean AUC yielded by cross-validation is  
    
    \begin{figure}
    \scalebox{0.85}{    
<<echo = FALSE,message=FALSE,fig.width=14,fig.align='center'>>=
position_data <- poster_data[["position_table"]]
position_data[["Freq"]] <- position_data[["Freq"]]/sum(position_data[["Freq"]])
ggplot(position_data, aes(x = Var1, y = Freq)) + 
  geom_bar(stat = "identity") + 
  scale_y_continuous(name = "Proportion of predicted cleavage sites") +
  scale_x_discrete("Absolute range from the real cleavage site") +
  poster_theme


@
    }
    \end{figure}
    \end{block}
    \vfill
    
    \begin{block}{Comparision with other signal peptide predictors}
    Benchmark data set: 140 eukaryotic proteins with signal peptide and 280 randomly chosen eukaryotic proteins without signal peptide added after 2010.
    
    \vspace{.5cm}
    
    signal.hsmm1987: trained on data set of 496 eukaryotic proteins with signal peptides added before year 1987.
    
    \vspace{.5cm}
    
    signal.hsmm2010: trained on data set of 3676 eukaryotic proteins with signal peptides added before year 2010.
    \end{block}
    \vfill
    
    
    
    \begin{block}{Comparision of various software}
    STH
    \end{block}
    \vfill
     
    \begin{block}{Summary}
      Hidden semi-Markov models can be used to accurately predict the presence of secretory signal peptides effectively extracting information from very small data sets.
    \end{block}
    \vfill 
    
        \begin{block}{Avaibility}
        \footnotesize{
      signal.hsmm web server: 
      
      \url{http://michbur.shinyapps.io/signalhsmm/}$\begin{array}{l}
        \begin{figure}[ht]
        \centering
        \scalebox{0.3}{
          \includegraphics{qrsignalhsmm.png}
        }
        \end{figure}
      \end{array}
      $
      
      signal.hsmm R package: 
      
      \url{http://cran.r-project.org/web/packages/signal.hsmm/}
        }
    \end{block}
    \vfill 
     
     
    \begin{block}{Bibliography}
    \tiny{
      \bibliographystyle{apalike}
      \bibliography{signalhsmm_poster}
    }
    \end{block}
    \vfill
            }
        \end{minipage}
      \end{beamercolorbox}
    \end{column}
  \end{columns}  
\end{frame}
\end{document}